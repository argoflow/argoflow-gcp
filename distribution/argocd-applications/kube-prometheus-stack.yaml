apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
spec:
  project: default
  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 17.2.2
    chart: kube-prometheus-stack
    helm:
      parameters:
      - name: grafana.adminUser
        value: admin
      - name: grafana.adminPassword
        value: ""
      - name: grafana.persistence.type
        value: pvc
      - name: grafana.persistence.enabled
        value: "true"
      - name: grafana.persistence.storageClassName
        value: gp2
      - name: grafana.persistence.accessModes[0]
        value: ReadWriteOnce
      - name: grafana.persistence.size
        value: 20Gi
      - name: grafana.grafana\.ini.server.root_url
        value: https://<<__subdomain_grafana__>>.<<__domain__>>/grafana/
      - name: grafana.grafana\.ini.server.serve_from_sub_path
        value: "true"
      - name: grafana.plugins[0]
        value: vonage-status-panel
      - name: grafana.sidecar.dashboards.provider.foldersFromFilesStructure
        value: "true"
      - name: grafana.sidecar.dashboards.folderAnnotation
        value: k8s-sidecar-target-directory
      - name: grafana.sidecar.dashboards.annotations.k8s-sidecar-target-directory
        value: /tmp/dashboards/Kubernetes
      - name: grafana.grafana\.ini.security.allow_embedding
        value: "true"
      - name: prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.storageClassName
        value: gp2
      - name: prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.accessModes[0]
        value: ReadWriteOnce
      - name: prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage
        value: 50Gi
      - name: prometheus.prometheusSpec.serviceMonitorSelectorNilUsesHelmValues
        value: "false"
      - name: prometheus.prometheusSpec.serviceMonitorSelector
        value: ""
      - name: prometheus.prometheusSpec.podMonitorSelectorNilUsesHelmValues
        value: "false"
      - name: prometheus.prometheusSpec.podMonitorSelector
        value: ""
      - name: prometheus.prometheusSpec.ruleSelectorNilUsesHelmValues
        value: "false"
      - name: prometheus.prometheusSpec.ruleSelector
        value: ""
      - name: prometheus.prometheusSpec.probeSelectorNilUsesHelmValues
        value: "false"
      - name: prometheus.prometheusSpec.probeSelector
        value: ""
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[0].sourceLabels[0]
        value: container
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[0].regex
        value: (.+)
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[0].targetLabel
        value: container_name
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[0].action
        value: replace
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[1].sourceLabels[0]
        value: pod
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[1].regex
        value: (.+)
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[1].targetLabel
        value: pod_name
      - name: kubelet.serviceMonitor.cAdvisorMetricRelabelings[1].action
        value: replace
  destination:
    server: https://kubernetes.default.svc
    namespace: monitoring
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
    - CreateNamespace=true
